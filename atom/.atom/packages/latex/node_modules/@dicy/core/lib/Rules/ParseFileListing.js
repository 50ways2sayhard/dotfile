'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ParseFileListing extends _Rule2.default {

  parse() {
    var _this = this;

    return (0, _asyncToGenerator3.default)(function* () {
      const output = yield _this.getResolvedOutput('$FILEPATH_0-ParsedFileListing');
      if (!output) return false;

      let rootPath = '';
      const parsedLog = {
        messages: [],
        inputs: [],
        outputs: [],
        calls: []
      };

      yield _this.firstParameter.parse([{
        names: ['path'],
        patterns: [/^PWD (.*)$/],
        evaluate: function (reference, groups) {
          rootPath = groups.path;
        }
      }, {
        names: ['type', 'path'],
        patterns: [/^(INPUT|OUTPUT) (.*)$/],
        evaluate: function (reference, groups) {
          const candidate = _this.normalizePath(_path2.default.resolve(rootPath, groups.path));
          const items = groups.type === 'INPUT' ? parsedLog.inputs : parsedLog.outputs;
          if (!items.includes(candidate)) items.push(candidate);
        }
      }]);

      parsedLog.inputs.sort();
      parsedLog.outputs.sort();

      output.value = parsedLog;

      return true;
    })();
  }
}
exports.default = ParseFileListing;
ParseFileListing.parameterTypes = [new _set2.default(['FileListing'])];
ParseFileListing.defaultActions = ['parse'];
ParseFileListing.description = 'Parse the file listing (fls) file generated by latex. Used to update the dependencies for rule LaTeX.';