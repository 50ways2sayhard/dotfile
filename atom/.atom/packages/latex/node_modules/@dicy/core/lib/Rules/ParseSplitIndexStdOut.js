'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ParseSplitIndexStdOut extends _Rule2.default {

  parse() {
    var _this = this;

    return (0, _asyncToGenerator3.default)(function* () {
      const output = yield _this.getResolvedOutput('$DIR_0/$NAME_0.log-ParsedSplitIndexStdOut');
      if (!output) return false;

      const parsedLog = {
        messages: [],
        inputs: [],
        outputs: [],
        calls: []
      };

      yield _this.firstParameter.parse([{
        names: ['text'],
        patterns: [/^(Close.*|New index file.*)$/],
        evaluate: function (reference, groups) {
          // Do not include the reference since it is to a virtual file.
          parsedLog.messages.push({
            severity: 'info',
            name: 'splitindex',
            text: groups.text
          });
        }
      }, {
        names: ['filePath'],
        patterns: [/^(.*?) with [0-9]+ lines$/],
        evaluate: function (reference, groups) {
          // Do not include the reference since it is to a virtual file.
          parsedLog.messages.push({
            severity: 'info',
            name: 'splitindex',
            text: groups._
          });
          parsedLog.outputs.push(_this.normalizePath(_path2.default.resolve(_this.rootPath, groups.filePath)));
        }
      }]);

      output.value = parsedLog;

      return true;
    })();
  }
}
exports.default = ParseSplitIndexStdOut;
ParseSplitIndexStdOut.parameterTypes = [new _set2.default(['SplitIndexStdOut'])];
ParseSplitIndexStdOut.defaultActions = ['parse'];
ParseSplitIndexStdOut.description = 'Parses the console output of splitindex.';