'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function escapePath(filePath) {
  return filePath.replace(/\\/g, '\\\\');
}

class Knitr extends _Rule2.default {

  constructCommand() {
    const escapedFilePath = escapePath(this.firstParameter.filePath);
    const outputPath = this.options.knitrOutputPath;
    const escapedDutputPath = escapePath(this.resolvePath(outputPath));
    const lines = ['library(knitr)'];
    const outputs = [outputPath];

    // If concordance option is enabled the add the option
    if (this.options.knitrConcordance) {
      lines.push('opts_knit$set(concordance=TRUE)');
      outputs.push(outputPath.replace(/\.[^.]*$/, '-concordance.tex'));
    }

    lines.push(`knit('${escapedFilePath}','${escapedDutputPath}')`);

    return {
      args: ['Rscript', '-e', lines.join(';')],
      cd: '$ROOTDIR',
      severity: 'error',
      outputs
    };
  }
}
exports.default = Knitr;
Knitr.parameterTypes = [new _set2.default(['RNoWeb'])];
Knitr.description = 'Runs knitr on Rnw files.';