'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _File = require('../File');

var _File2 = _interopRequireDefault(_File);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class MetaPost extends _Rule2.default {

  getFileActions(file) {
    return (0, _asyncToGenerator3.default)(function* () {
      // ParsedFileListing triggers updateDependencies, all others trigger run.
      return [file.type === 'ParsedFileListing' ? 'updateDependencies' : 'run'];
    })();
  }

  constructCommand() {
    // Force the same error options as LaTeX and capture the file listing.
    return {
      args: ['mpost', '-file-line-error', '-interaction=batchmode', '-recorder', '{{$BASE_0}}'],
      cd: '$ROOTDIR_0',
      severity: 'error',
      inputs: ['$DIR_0/$NAME_0.fls-ParsedFileListing'],
      outputs: ['$DIR_0/$NAME_0.fls', '$DIR_0/$NAME_0.log']
    };
  }
}
exports.default = MetaPost;
MetaPost.parameterTypes = [new _set2.default(['MetaPost'])];
MetaPost.description = 'Runs MetaPost on produced MetaPost files.';