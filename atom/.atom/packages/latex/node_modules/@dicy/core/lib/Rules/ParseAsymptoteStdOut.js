'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ParseAsymptoteStdOut extends _Rule2.default {

  parse() {
    var _this = this;

    return (0, _asyncToGenerator3.default)(function* () {
      const output = yield _this.getResolvedOutput('$DIR_0/$NAME_0.log-ParsedAsymptoteStdOut');
      if (!output) return false;

      let rootPath = _this.rootPath;
      const parsedLog = {
        messages: [],
        inputs: [],
        outputs: [],
        calls: []
      };

      yield _this.firstParameter.parse([{
        names: ['filePath'],
        patterns: [/^cd (.*)$/],
        evaluate: function (reference, groups) {
          rootPath = groups.filePath;
        }
      }, {
        names: ['filePath'],
        patterns: [/^Wrote (.*)$/],
        evaluate: function (reference, groups) {
          parsedLog.outputs.push(_this.normalizePath(_path2.default.resolve(rootPath, groups.filePath)));
        }
      }, {
        names: ['type', 'filePath'],
        patterns: [/^(Including|Loading) \S+ from (.*)$/],
        evaluate: function (reference, groups) {
          if (!_path2.default.isAbsolute(groups.filePath)) {
            parsedLog.inputs.push(_this.normalizePath(_path2.default.resolve(rootPath, groups.filePath)));
          }
        }
      }]);

      output.value = parsedLog;

      return true;
    })();
  }
}
exports.default = ParseAsymptoteStdOut;
ParseAsymptoteStdOut.parameterTypes = [new _set2.default(['AsymptoteStdOut'])];
ParseAsymptoteStdOut.defaultActions = ['parse'];
ParseAsymptoteStdOut.description = 'Parses the console output of Asymptote.';