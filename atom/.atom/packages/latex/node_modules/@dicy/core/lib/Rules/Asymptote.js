'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _File = require('../File');

var _File2 = _interopRequireDefault(_File);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class Asymptote extends _Rule2.default {

  getFileActions(file) {
    return (0, _asyncToGenerator3.default)(function* () {
      // ParsedAsymptoteLog triggers updateDependencies, all others trigger run.
      return [file.type === 'ParsedAsymptoteStdOut' ? 'updateDependencies' : 'run'];
    })();
  }

  constructCommand() {
    // We are executing in the same directory as the source file so we only need
    // the base name. Also, execute with high verbosity so we can capture a log
    // file from the output.
    /* eslint no-template-curly-in-string: 0 */
    return {
      args: ['asy', '-vv', '{{$BASE_0}}'],
      cd: '$ROOTDIR_0',
      severity: 'error',
      inputs: ['$DIR_0/$NAME_0.log-ParsedAsymptoteStdOut'],
      outputs: ['$DIR_0/${NAME_0}_0.pdf', '$DIR_0/${NAME_0}_0.eps', '$DIR_0/$NAME_0.pre'],
      stdout: '$DIR_0/$NAME_0.log-AsymptoteStdOut',
      stderr: '$DIR_0/$NAME_0.log-AsymptoteStdErr'
    };
  }
}
exports.default = Asymptote;
Asymptote.parameterTypes = [new _set2.default(['Asymptote'])];
Asymptote.description = 'Run Asymptote on any generated .asy files.';