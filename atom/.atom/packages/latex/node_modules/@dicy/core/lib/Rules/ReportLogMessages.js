'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class ReportLogMessages extends _Rule2.default {

  run() {
    var _this = this;

    return (0, _asyncToGenerator3.default)(function* () {
      const parsedLog = _this.firstParameter.value;

      // Not much here, just log each message, if there are any.
      if (parsedLog && parsedLog.messages) {
        for (const message of parsedLog.messages) {
          _this.log(message);
        }
      }
      return true;
    })();
  }
}
exports.default = ReportLogMessages;
ReportLogMessages.parameterTypes = [new _set2.default(['ParsedAsymptoteStdOut', 'ParsedBiberLog', 'ParsedBibTeXLog', 'ParsedLaTeXLog', 'ParsedMakeIndexLog', 'ParsedMendexLog', 'ParsedMendexStdErr', 'ParsedSplitIndexStdErr', 'ParsedSplitIndexStdOut', 'ParsedXindyLog'])];
ReportLogMessages.commands = new _set2.default(['log']);
ReportLogMessages.alwaysEvaluate = true;
ReportLogMessages.description = 'Reports log messages from any parsed log files.';