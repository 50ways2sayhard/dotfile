'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _File = require('../File');

var _File2 = _interopRequireDefault(_File);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

var _State = require('../State');

var _State2 = _interopRequireDefault(_State);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class BibToGls extends _Rule2.default {

  static isApplicable(state, command, phase, options, parameters = []) {
    return (0, _asyncToGenerator3.default)(function* () {
      return state.isGrandparentOf(parameters[0], parameters[1]) && !!parameters[1].value && !!parameters[1].value.commands && !!parameters[1].value.commands.includes('glsxtr@resource');
    })();
  }

  getFileActions(file) {
    return (0, _asyncToGenerator3.default)(function* () {
      switch (file.type) {
        case 'ParsedBibToGlsLog':
          return ['updateDependencies'];
        case 'LaTeXAuxilary':
          return ['run'];
      }

      return [];
    })();
  }

  constructCommand() {
    const args = ['bib2gls', '-t', '{{$NAME_0.gelg}}'];

    // Only push the -d option if needed.
    if (this.env.DIR_0 !== '.') args.push('-d', '{{$DIR_0}}');
    args.push('{{$NAME_0}}');

    return {
      args,
      cd: '$ROOTDIR',
      severity: 'error',
      inputs: ['$DIR_0/$NAME_0.gelg-ParsedBibToGlsLog'],
      outputs: ['$DIR_0/$NAME_0.gelg']
    };
  }
}
exports.default = BibToGls;
BibToGls.parameterTypes = [new _set2.default(['LaTeXAuxilary']), new _set2.default(['ParsedLaTeXAuxilary'])];
BibToGls.description = 'Runs bib2gls to process bibliography files (bib) when need is detected.';