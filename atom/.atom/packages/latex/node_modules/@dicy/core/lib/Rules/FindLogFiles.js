'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class FindLogFiles extends _Rule2.default {

  run() {
    var _this = this;

    return (0, _asyncToGenerator3.default)(function* () {
      // Look for physical log files
      yield _this.getGlobbedFiles('$OUTDIR/$JOB.@(log|*lg)');
      return true;
    })();
  }
}
exports.default = FindLogFiles;
FindLogFiles.commands = new _set2.default(['build', 'log']);
FindLogFiles.phases = new _set2.default(['initialize']);
FindLogFiles.alwaysEvaluate = true;
FindLogFiles.description = 'Find preexisting log files.';