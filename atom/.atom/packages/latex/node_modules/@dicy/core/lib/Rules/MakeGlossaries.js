'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _Rule = require('../Rule');

var _Rule2 = _interopRequireDefault(_Rule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class MakeGlossaries extends _Rule2.default {

  initialize() {
    var _this = this;

    return (0, _asyncToGenerator3.default)(function* () {
      yield _this.getResolvedInputs(['$DIR_0/$NAME_0.acn', '$DIR_0/$NAME_0.ist']);
    })();
  }

  constructCommand() {
    const { dir, name } = _path2.default.parse(this.firstParameter.filePath);
    const args = ['makeglossaries'];

    // Only push the -d option if needed.
    if (dir) args.push('-d', dir);
    args.push(name);

    return {
      args,
      cd: '$ROOTDIR',
      severity: 'error',
      outputs: ['$DIR_0/$NAME_0.acr', '$DIR_0/$NAME_0.alg', '$DIR_0/$NAME_0.gls', '$DIR_0/$NAME_0.glg']
    };
  }
}
exports.default = MakeGlossaries;
MakeGlossaries.parameterTypes = [new _set2.default(['GlossaryControlFile'])];
MakeGlossaries.description = 'Runs makeglossaries on any glossary files generated.';